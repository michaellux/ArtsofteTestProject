// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ArtsofteTestProject.Models;

public partial class ArtsofteTestProjectContext : DbContext
{
    public ArtsofteTestProjectContext(DbContextOptions<ArtsofteTestProjectContext> options)
        : base(options)
    {
        //Database.EnsureDeleted();   // удаляем бд со старой схемой
        Database.EnsureCreated();   // создаем бд с новой схемой
    }

    public virtual DbSet<Department> Department { get; set; }

    public virtual DbSet<Employee> Employee { get; set; }

    public virtual DbSet<EmployeePlace> EmployeePlace { get; set; }

    public virtual DbSet<ProgrammingLanguage> ProgrammingLanguage { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Department>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Employee>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Gender)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Surname)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<EmployeePlace>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.Department).WithMany(p => p.EmployeePlace)
                .HasForeignKey(d => d.DepartmentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EmployeePlace_Department");

            entity.HasOne(d => d.Employee).WithMany(p => p.EmployeePlace)
                .HasForeignKey(d => d.EmployeeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EmployeePlace_Employee");

            entity.HasOne(d => d.ProgrammingLanguage).WithMany(p => p.EmployeePlace)
                .HasForeignKey(d => d.ProgrammingLanguageId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EmployeePlace_ProgrammingLanguage");
        });

        modelBuilder.Entity<ProgrammingLanguage>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        FillTestData(modelBuilder);

        OnModelCreatingGeneratedProcedures(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);

    private static void FillTestData(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Department>().HasData(
            new Department
            {
                Id = Guid.NewGuid(),
                Name = "First",
                Floor = 1
            }
         );

        modelBuilder.Entity<ProgrammingLanguage>().HasData(
            new Department
            {
                Id = Guid.NewGuid(),
                Name = "Fortran"
            }
         );
    }
}